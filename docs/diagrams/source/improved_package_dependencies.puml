@startuml Improved Package Dependencies

skinparam componentStyle uml2
skinparam component {
  BackgroundColor White
  BorderColor Black
  ArrowColor Black
}

package "auth" as auth {
  package "interfaces" as auth_interfaces {
  }
  
  package "jwt" as auth_jwt {
  }
  
  package "oidc" as auth_oidc {
  }
  
  auth_jwt --> auth_interfaces
  auth_oidc --> auth_interfaces
}

package "logging" as logging {
  package "interfaces" as logging_interfaces {
  }
  
  package "zap" as logging_zap {
  }
  
  logging_zap --> logging_interfaces
}

package "telemetry" as telemetry {
  package "interfaces" as telemetry_interfaces {
  }
  
  package "prometheus" as telemetry_prometheus {
  }
  
  package "opentelemetry" as telemetry_opentelemetry {
  }
  
  telemetry_prometheus --> telemetry_interfaces
  telemetry_opentelemetry --> telemetry_interfaces
}

package "middleware" as middleware {
}

package "context" as context {
  package "interfaces" as context_interfaces {
  }
  
  package "impl" as context_impl {
  }
  
  context_impl --> context_interfaces
}

package "health" as health {
  package "interfaces" as health_interfaces {
  }
  
  package "impl" as health_impl {
  }
  
  health_impl --> health_interfaces
}

package "errors" as errors {
  package "interfaces" as errors_interfaces {
  }
  
  package "core" as errors_core {
  }
  
  package "domain" as errors_domain {
  }
  
  package "app" as errors_app {
  }
  
  package "infra" as errors_infra {
  }
  
  errors_core --> errors_interfaces
  errors_domain --> errors_interfaces
  errors_app --> errors_interfaces
  errors_infra --> errors_interfaces
}

package "config" as config {
  package "interfaces" as config_interfaces {
  }
  
  package "impl" as config_impl {
  }
  
  config_impl --> config_interfaces
}

package "db" as db {
  package "interfaces" as db_interfaces {
  }
  
  package "sql" as db_sql {
  }
  
  package "mongo" as db_mongo {
  }
  
  db_sql --> db_interfaces
  db_mongo --> db_interfaces
}

package "di" as di {
  package "interfaces" as di_interfaces {
  }
  
  package "impl" as di_impl {
  }
  
  di_impl --> di_interfaces
}

auth --> logging_interfaces
auth --> middleware
auth --> errors_interfaces

telemetry --> logging_interfaces
telemetry --> context_interfaces

middleware --> logging_interfaces
middleware --> context_interfaces
middleware --> errors_interfaces
middleware --> auth_interfaces

health --> logging_interfaces
health --> config_interfaces
health --> db_interfaces

errors_interfaces --> context_interfaces

db --> config_interfaces
db --> errors_interfaces
db --> context_interfaces

di --> config_interfaces
di --> logging_interfaces

config --> errors_interfaces

@enduml