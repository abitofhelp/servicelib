// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/abitofhelp/servicelib/config (interfaces: ConfigInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigInterface is a mock of ConfigInterface interface.
type MockConfigInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigInterfaceMockRecorder
}

// MockConfigInterfaceMockRecorder is the mock recorder for MockConfigInterface.
type MockConfigInterfaceMockRecorder struct {
	mock *MockConfigInterface
}

// NewMockConfigInterface creates a new mock instance.
func NewMockConfigInterface(ctrl *gomock.Controller) *MockConfigInterface {
	mock := &MockConfigInterface{ctrl: ctrl}
	mock.recorder = &MockConfigInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigInterface) EXPECT() *MockConfigInterfaceMockRecorder {
	return m.recorder
}

// GetApp mocks base method.
func (m *MockConfigInterface) GetApp() interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApp")
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetApp indicates an expected call of GetApp.
func (mr *MockConfigInterfaceMockRecorder) GetApp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApp", reflect.TypeOf((*MockConfigInterface)(nil).GetApp))
}

// GetDatabase mocks base method.
func (m *MockConfigInterface) GetDatabase() interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatabase")
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetDatabase indicates an expected call of GetDatabase.
func (mr *MockConfigInterfaceMockRecorder) GetDatabase() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatabase", reflect.TypeOf((*MockConfigInterface)(nil).GetDatabase))
}
